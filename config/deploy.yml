# Name of your application. Used to uniquely configure containers.
service: react-importmap

# Name of the container image.
image: tiyalcin/react-importmap

# Deploy to these servers.
servers:
  web:
    hosts:
      - 164.92.252.9 # digitalocean-
    labels:
      traefik.http.middlewares.websecure-compress.compress: true
      traefik.http.routers.web.rule: Host(`saastemplate.de`)
      traefik.http.routers.websecure.entrypoints: websecure
      traefik.http.routers.websecure.rule: Host(`saastemplate.de`)
      traefik.http.routers.websecure.tls: true
      traefik.http.routers.websecure.tls.certresolver: letsencrypt      
      traefik.http.routers.websecure.middlewares: websecure-compress@docker

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  username: tiyalcin

  # Always use an access token rather than real password when possible.
  password:
    - KAMAL_REGISTRY_PASSWORD

env:
  secret:
    - RAILS_MASTER_KEY

volumes:
  - "data:/data"

traefik:
  options:
    publish:
      - "443:443"
    volume:
      - "/letsencrypt/acme.json:/letsencrypt/acme.json"
  args:
    entryPoints.web.address: ":80"
    entryPoints.websecure.address: ":443"
    entryPoints.web.http.redirections.entryPoint.to: websecure
    entryPoints.web.http.redirections.entryPoint.scheme: https
    entryPoints.web.http.redirections.entrypoint.permanent: true
    entrypoints.websecure.http.tls: true
    certificatesResolvers.letsencrypt.acme.email: "tiyalcin@gmail.com"
    certificatesResolvers.letsencrypt.acme.storage: "/letsencrypt/acme.json"
    certificatesResolvers.letsencrypt.acme.httpchallenge: true
    certificatesResolvers.letsencrypt.acme.httpchallenge.entrypoint: web
